job "thirdai-platform-frontend" {
  datacenters = ["dc1"]

  type = "service"


  constraint {
    attribute = "${node.class}"
    value = "critical_services"
  }

  constraint {
    attribute = "${meta.unique.hostname}"
    distinct_hosts = true
  }

  group "thirdai-platform-frontend" {
    count = "{{ .MajorityCriticalServiceNodes }}"

    network {
      port "thirdai-platform-frontend-http" {
        to = 3000
      }
    }

    service {
      name = "thirdai-platform-frontend"
      port = "thirdai-platform-frontend-http"
      provider = "consul"

      tags = [
        "traefik.enable=true",
        "traefik.http.routers.thirdai-platform-frontend-http.rule=(PathPrefix(`/api/auth`) || PathPrefix(`/`))",
        "traefik.http.routers.thirdai-platform-frontend-http.priority=1"
      ]

      check {
        type     = "tcp"
        interval = "10s"
        timeout  = "2s"
      }
    }

    task "server" {
      driver = "docker"

      env {
        NEXT_PUBLIC_OPENAI_API_KEY = "{{ .OpenaiApiKey }}"
        NEXT_PUBLIC_IDENTITY_PROVIDER = "{{ .IdentityProvider }}"
        KEYCLOAK_CLIENT_ID = "thirdai-login-client"
        KEYCLOAK_CLIENT_SECRET = ""
        KEYCLOAK_ISSUER = "https://{{ .KeycloakServerHostname }}/keycloak/realms/ThirdAI-Platform"
        AUTH_TRUST_HOST = "true"
        NEXTAUTH_SECRET = "{{ .NextAuthSecret }}"

        {{ if .UseSslInLogin }}
        NODE_EXTRA_CA_CERTS = "/certs/traefik.crt"
        {{ end }}
      }

      config {
        {{ with .Driver }}
          image = "{{ .Registry }}/{{ .ImageName }}:{{ .Tag }}"
          image_pull_timeout = "15m"
          ports = ["thirdai-platform-frontend-http"]
          auth {
            username = "{{ .DockerUsername }}"
            password = "{{ .DockerPassword }}"
            server_address = "{{ .Registry }}"
          }
        {{ end }}
        {{ if .UseSslInLogin }}
          volumes = [
          {{ with .Driver }}
            "{{ .ShareDir }}/certs:/certs",
          ]
          {{ end }}
        {{ end }}
      }

      resources {
        cpu    = 500
        memory = 1500
        memory_max = 4000
      }
    }
  }
}