job "parsing" {
  datacenters = ["dc1"]

  type = "service"

  group "parsing" {
    count = 1

    network {
      port "parsing-http" {
        {{ if isDocker .Driver }}
          to = 80
        {{ end }}
      }
    }

    service {
      name = "parsing"
      port = "parsing-http"
      provider = "nomad"

      tags = [
        "traefik.enable=true",
        "traefik.http.routers.parsing-http.rule=PathPrefix(`/cache/`)",
        "traefik.http.routers.parsing-http.priority=10"
      ]
    }

    task "backend" {
      {{ if isLocal .Driver }}
        driver = "raw_exec"
      {{ else if isDocker .Driver }}  
        driver = "docker"
      {{ end }}

      env {
        MODEL_BAZAAR_ENDPOINT = "{{ .ModelBazaarEndpoint }}"
        {{ if isDocker .Driver }}
        MODEL_BAZAAR_DIR = "/model_bazaar"
        {{ else if isLocal .Driver }}
        MODEL_BAZAAR_DIR = "{{ .ShareDir }}"
        {{ end }}
      }

      config {
        {{ if isDocker .Driver }}  
          {{ with .Driver }}
          image = "{{ .Registry }}/{{ .ImageName }}:{{ .Tag }}"
          image_pull_timeout = "15m"
          ports = ["parsing-http"]
          auth {
            username = "{{ .DockerUsername }}"
            password = "{{ .DockerPassword }}"
            server_address = "{{ .Registry }}"
          }
          {{ end }}
          volumes = [
            "{{ .ShareDir }}:/model_bazaar"
          ]
          command = "python3"
          args    = ["-m", "uvicorn", "main:app", "--app-dir", "parsing_job", "--host", "0.0.0.0", "--port", "80"]
        {{ else if isLocal .Driver }}
          command = "/bin/sh"
          {{ with .Driver }}
          args    = ["-c", "cd {{ .PlatformDir }} && {{ .PythonPath }} -m uvicorn main:app --app-dir parsing_job --host 0.0.0.0 --port ${NOMAD_PORT_parsing_http}"]
          {{ end }}
        {{ end }}
      }

      resources {
        cpu = 2400
        memory = 5000
      }
    }
  }
}