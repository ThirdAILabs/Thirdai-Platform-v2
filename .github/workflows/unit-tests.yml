name: Unit Tests

# Kills old jobs from the same pr if we push a new commit
# See https://stackoverflow.com/questions/66335225/how-to-cancel-previous-runs-in-the-pr-when-you-push-new-commitsupdate-the-curre
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  PRODUCT_VERSION: "latest"
  
# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  merge_group:
    types: [checks_requested]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  go-unit-tests:
    runs-on: ubuntu-latest-8-cores
    steps:
      - uses: actions/checkout@v2

      - name: Set up Go >=1.23.1
        uses: actions/setup-go@v5
        with:
          go-version: '>=1.23.1'

      - name: run backend unit tests
        run: |
          cd thirdai_platform && go test ./model_bazaar/tests -v

      - name: run ndb unit tests
        run: |
          cd thirdai_platform && go test ./search/ndb -v

  train-job-unit-tests:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: install dependencies
      run: |
        pip3 install -r thirdai_platform_py/requirements.txt
        pip3 install pytest
        pip3 install pyopenssl --upgrade

    - name: run unit tests
      run: |
        cd thirdai_platform_py
        python3 -m pytest train_job -v

  recovery-snapshot-unit-tests:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: install dependencies
      run: |
        pip3 install -r thirdai_platform_py/requirements.txt
        pip3 install pytest
        pip3 install pyopenssl --upgrade

    - name: run unit tests
      run: |
        cd thirdai_platform_py
        python3 -m pytest recovery_snapshot_job -v
  
  llm-gen-unit-tests:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: install dependencies
      run: |
        pip3 install -r thirdai_platform_py/requirements.txt
        pip3 install httpx
        pip3 install pytest

    - name: run unit tests
      run: |
        cd thirdai_platform_py
        python3 -m pytest llm_dispatch_job -v

  llm-cache-unit-tests:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: install dependencies
      run: |
        pip3 install -r thirdai_platform_py/requirements.txt
        pip3 install httpx
        pip3 install pytest

    - name: run unit tests
      run: |
        python3 -m pytest ./thirdai_platform_py/llm_cache_job -v

  platform-common-tests:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: install dependencies
      run: |
        pip3 install -r thirdai_platform_py/requirements.txt
        pip3 install httpx
        pip3 install pytest

    - name: run unit tests
      run: |
        python3 -m pytest ./thirdai_platform_py/tests -v

  deployment-job-unit-tests:
    runs-on: ubuntu-latest-8-cores
    steps:
    - uses: actions/checkout@v2

    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: install dependencies
      run: |
        pip3 install -r thirdai_platform_py/requirements.txt
        pip3 install pyopenssl --upgrade
        pip3 install pytest

    - name: run unit tests
      # These have to be run individually because otherwise global variables 
      # don't get reset correctly between tests. 
      # TODO(Nicholas): Refactor the deployment job to avoid this.
      run: |
        python3 -m pytest ./thirdai_platform_py/deployment_job -v
