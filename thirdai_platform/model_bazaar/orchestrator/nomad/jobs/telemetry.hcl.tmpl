job "telemetry" {
  datacenters = ["dc1"]
  type        = "service"
  group "telemetry" {
    count = 1

    network {
      port "vicky-http" {
        to = 8428
      }

      port "grafana-http" {
        to = 3000
      }

      port "vicky-logs-http" {
        to = 9428
      }
    }

    task "victoriametrics" {
      driver = "docker"

      service {
        name     = "vicky-web"
        provider = "nomad"
        port     = "vicky-http"
        tags = [
          "traefik.enable=true",
          "traefik.http.routers.vicky-http.rule=PathPrefix(`/victoriametrics`)",
          "traefik.http.routers.vicky-http.priority=10"
        ]
      }

      config {
        {{ with .Docker }}
        image = "{{ .Registry }}/victoria-metrics:tags-v1.102.1-1-g76115c611f"
        auth {
            username = "{{ .DockerUsername }}"
            password = "{{ .DockerPassword }}"
            server_address = "{{ .Registry }}"
          }
        {{ end }}
        
        ports = ["vicky-http"]
        args = [
          "--storageDataPath={{ .ClusterMonitoringDir }}/victoriametric",
          "--retentionPeriod=10d",
          "--httpListenAddr=:${NOMAD_PORT_vicky_http}",
          "--promscrape.config={{ .ClusterMonitoringDir }}/node_discovery/prometheus.yaml",
          "--http.pathPrefix=/victoriametrics",
          "--promscrape.fileSDCheckInterval=5s"
        ]
        {{ if .IsLocal }}
        extra_hosts = ["host.docker.internal:host-gateway"]
        {{ end }}
        volumes = [
          {{ with .Docker }}
          "{{ .ShareDir }}:/model_bazaar"
          {{ end }}
        ]
      }
      resources {
        cpu    = 256
        memory = 600
      }
    }

    task "victorialogs" {
      driver = "docker"

      service {
        name     = "vicky-logs"
        port     = "vicky-logs-http"
        provider = "nomad"
        tags = [
          "traefik.enable=true",
          "traefik.http.routers.vicky-logs-http.rule=PathPrefix(`/victorialogs`)",
          "traefik.http.routers.vicky-logs-http.priority=10"
        ]
      }

      config {
        image = "docker.io/victoriametrics/victoria-logs:latest"
        ports = ["vicky-logs-http"]
        args = [
          "--storageDataPath={{ .ClusterMonitoringDir }}/victorialogs",
          "--retentionPeriod=30d",
          "--httpListenAddr=:${NOMAD_PORT_vicky_logs_http}",
          "--http.pathPrefix=/victorialogs"
        ]
        {{ if .IsLocal }}
        extra_hosts = ["host.docker.internal:host-gateway"]
        {{ end }}
        volumes = [
          {{ with .Docker }}
          "{{ .ShareDir }}:/model_bazaar"
          {{ end }}
        ]
      }
      resources {
        cpu    = 256
        memory = 600
      }
    }

    task "vector" {
      driver = "docker"

      lifecycle {
        hook = "poststart"
        sidecar = true
      }

      config {
        image = "timberio/vector:nightly-distroless-libc"
        args = [
          "--config={{ .ClusterMonitoringDir }}/vector/vector.yaml"
        ]

        {{ if not .IsLocal }}
        group_add = ["4646"]
        {{ end }}

        volumes = [
          {{ with .Docker }}
          "{{ .ShareDir }}:/model_bazaar",
          {{ end }}
        ]
      }

      resources {
        cpu    = 256
        memory = 300
      }
    }

    task "grafana" {
      lifecycle {
        hook = "poststart"
        sidecar = true
      }

      driver = "docker"

      env {
        GF_LOG_LEVEL          = "DEBUG"
        GF_LOG_MODE           = "console"
        GF_SECURITY_ADMIN_USER = "{{ .AdminUsername }}"
        GF_SECURITY_ADMIN_EMAIL = "{{ .AdminEmail }}"
        GF_SECURITY_ADMIN_PASSWORD = "{{ .AdminPassword }}"
        GF_DATABASE_URL = "{{ .GrafanaDbUrl }}"
        GF_SERVER_ROOT_URL = "%(protocol)s://%(domain)s:%(http_port)s/grafana/"
        GF_SERVER_SERVE_FROM_SUB_PATH = "true"
        GF_SERVER_HTTP_PORT   = "${NOMAD_PORT_http}"
        GF_PATHS_PROVISIONING = "/local/grafana/provisioning"
        GF_PATHS_DATA = "{{ .ClusterMonitoringDir }}/grafana"
        GF_SECURITY_ALLOW_EMBEDDING=true
      }

      config {
        {{ with .Docker }}
        image = "{{ .Registry }}/grafana:main-ubuntu"
        auth {
          username = "{{ .DockerUsername }}"
          password = "{{ .DockerPassword }}"
          server_address = "{{ .Registry }}"
        }
        group_add = ["4646"]
        ports = ["grafana-http"]
        volumes = [
          "{{ .ShareDir }}:/model_bazaar"
        ]
        {{ end }}
      }

      service {
        name = "grafana"
        port = "grafana-http"
        provider = "nomad"
        tags = [
          "traefik.enable=true",
          "traefik.http.routers.grafana-http.rule=PathPrefix(`/grafana`)",
          "traefik.http.routers.grafana-http.priority=10"
        ]
      }

      resources {
        cpu    = 256
        memory = 300
      }
    }
  }
}